1编写程序，完成下列题目（1分）
题目内容：
如果列出10以内自然数中3或5的倍数，则包括3,5,6,9。那么这些数字的和为23。要求计算得出任意正整数n以内中3或5的倍数的自然数之和。

输入格式:
一个正整数n。
输出格式：
n以内中3或5的倍数的自然数之和。
输入样例：
10
输出样例：
23
时间限制：500ms内存限制：32000kb

n = int(raw_input('输入一个正整数n:'))
x = 0

for i in range(1,n):
    if i % 3 == 0 or i % 5 == 0:
        x += i

print x


-----------------------------------------------------------
2编写程序，完成下列题目（1分）
题目内容：
10以内的素数2,3,5,7的和为17。要求计算得出任意正整数n以内的所有素数的和。
输入格式:
一个正整数n。
输出格式：
n以内的所有素数的和。
输入样例：
10
输出样例：
17
时间限制：500ms内存限制：32000kb
import math  #计算的更快
n = int(raw_input('输入一个正整数n:'))
x=0

for i in range(2,n):
     for j in range(2,int(math.sqrt(i)+1)):
         if i % j == 0 :
             break
     else:
        x+=i

print x



3编写程序，完成下列题目（1分）
题目内容：
根据下列信息计算在1901年1月1日至2000年12月31日间共有多少个星期天落在每月的第一天上？
                        礼拜2
a)  1900.1.1是星期一
b)  1月，3月，5月，7月，8月，10月和12月是31天
c)  4月，6月，9月和11月是30天
d)  2月是28天，在闰年是29天
e)  公元年数能被4整除且又不能被100整除是闰年
f)  能直接被400整除也是闰年
输出格式：
一个正整数

时间限制：500ms内存限制：32000kb

number =0
dayStar = 2 #1901年第一天为周二

for year in range(1901,2001):
    if (year % 400==0 or year %4 ==0 and year % 100 != 0):#闰年 不闰年
        m2=29
    else:
        m2=28

    for m in (31,m2,31,30,31,30,31,31,30,31,30,31):#遍历月份
        mm = m%7
        day = dayStar + mm
        if (day % 7 == 0):
            number += 1
    dayStar = day%7 #！！！重新赋值daystar

print number

--------------------------------------------------------
编写程序，完成下列题目（2分）
题目内容：

数字197可以被称为循环素数，因为197的三个数位循环移位后的数字：197,971,719均为素数。
100以内这样的数字包括13个，2,3,5,7,11,13,17,31,37,71,73,79,97。
要求任意正整数n以内一共有多少个这样的循环素数。

输入格式:
一个正整数n。
输出格式：
n以内循环素数的数目。
输入样例：
100
输出样例：
13
时间限制：2000ms内存限制：32000kb
import math

n = int(raw_input('输入一个正整数n:'))
number = 0


for i in range(2,n+1):

    for j in range(2,int(math.sqrt(i)+1)):

        if (i % j == 0 ):
            break
    else:
        #print i 这里的i 就是素数


        if  i%10 != i: #两位数以上的进行后续判断
            i_star = 0
            i_change = i
            x = -1
            i_cont = i
            #上面两个计数器 主要是构造 两位数以上的素数数位循环移位
            while i_cont > 1 :
                i_cont /= 10.0
                x += 1
            isushu = 0
            while i_star != i :
                i_star = int( i_change/10) + i_change%10 * (10**x)
                i_change = i_star
                #循环位移

                for o in range(2,int(math.sqrt(i_star)+1)):#这里range条件不要丢不然容易出问题

                    if(i_star % o ==0):
                        isushu = 9 #如果有合数 则变为9 为以后计数增加判定条件
                        break
            else:
                if isushu < 1 :
                    number += 1


        else:
            number += 1



print number
